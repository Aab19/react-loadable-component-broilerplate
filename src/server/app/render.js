import React from "react"
import webpackAssets from "../../config/webpack-assets"
import { StaticRouter } from "react-router-dom"
import { renderRoutes } from "react-router-config"
import ReactDOMServer from "react-dom/server"
import routes from "../../client/routes/index"
import path from "path"
import { Provider } from "react-redux"
import store from "../../config/store"

// config serverside rendering loadable components
import { ChunkExtractor } from "@loadable/server"
// This is the stats file generated by webpack loadable plugin
const statsFile = path.resolve("assets/build/loadable-stats.json")
const extractor = new ChunkExtractor({ statsFile })

export default function handleRender(req, res, next) {
  const context = {}
  const jsx = extractor.collectChunks(
    <StaticRouter location={req.url} context={context}>
      <Provider store={store}>{renderRoutes(routes)}</Provider>
    </StaticRouter>
  )

  const markup = ReactDOMServer.renderToString(jsx)
  if (context.url) {
    // Somewhere a `<Redirect>` was rendered
    redirect(301, context.url)
  } else {
    // we're good, send the response
    res.end(renderHtml(markup))
  }
}

function renderHtml(
  body = "",
  styleTags,
  preloadedState = {},
  global = {},
  css
) {
  return `
    <!DOCTYPE HTML>
    <html>
      <head>
        <meta charSet="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
        <meta httpEquiv="x-ua-compatible" content="ie=edge" />
        <link rel="stylesheet" href="/assets/css/style.css" />
      </head>
      <body>
        <div id="app">${body}</div>
        <script src="${webpackAssets.vendor.js}"></script>
        <script src="${webpackAssets.app.js}"></script>
      </body>
    </html>
  `.replace(/\s\s+/g, "")
}
